;
; Download $[NAME] dataset job by name of files in repo directory. Ex. NAME=excite
;
;  drake -w script/download.drake -v NAME=$[NAME] %download_$[NAME]
;

; Environments
%include common-env.drake

BASE=download

; default download dataset name
NAME:=excite

;;
; Methods
;;

file() [eval]
  echo "$CODE" | tee $OUTPUT | nl

download()
  for f in $INPUTS; do 
    source $f
    [ -z "$DIR" -a -n "$NAME" ] && DIR=../data/$NAME
    if [ -z "$DIR" -o -z "$URL" ]; then
      echo "params are not set. DIR=$DIR, URL=$URL"
    else 
      if [ -d "$DIR" ]; then
        echo "The directory exists. Skip. DIR=$DIR, URL=$URL"
      else
        mkdir -p $DIR
        if [ "${URL##*.}" == "zip" ]; then
          echo "Download a file into $DIR from URL: $URL ..."
          TMP_FILE="tmp.`basename $f`.zip"
          wget -qO- -O "$TMP_FILE" $URL && unzip -d "$DIR/" $TMP_FILE && rm $TMP_FILE
        elif [ "${URL##*.}" == "7z" ]; then
          echo "Download a file into $DIR from URL: $URL ..."
          TMP_FILE="tmp.`basename $f`.7z"
          wget -qO- -O "$TMP_FILE" $URL && 7z x $TMP_FILE -o"$DIR/" && rm $TMP_FILE
        elif [ "${URL##*.}" == "gz" ]; then
          echo "Download a file into $DIR from URL: $URL ..."
          TMP_FILE="tmp.`basename $f`.gz"
          FILE="tmp.`basename $f`"
          wget -qO- -O "$TMP_FILE" $URL && gunzip $TMP_FILE && mv $FILE "$DIR/"
        else
          echo "Download a file into $DIR/`basename $URL` from URL: $URL ..."
          filename=$(basename "$URL" | sed 's/[\?=%]/_/g')
          wget -O "$DIR/$filename" $URL
        fi
      fi
    fi
  done

;;
; downlaod data
;;

; by-name download
%download_$[NAME] <- !repo/$[NAME]-env.sh [method:download]

%splunk <- !repo/splunk-env.sh [method:download]
%excite <- !repo/excite-env.sh [method:download]

%download_all <- !repo/splunk-env.sh, !repo/excite-env.sh [method:download]

; hdfs upload
%upload <- %download_all
  $[HDFS_EXEC] dfs -test -d $[DATA_DIR_HDFS]
  if [ "$?" -eq "0" ]; then
    echo "The path exists. Remove it first with the commmand:"
    echo $[HDFS_EXEC] dfs -rmr $[DATA_DIR_HDFS]
  else
    $[HDFS_EXEC] dfs -mkdir $[ROOT_DIR_HDFS]/
    $[HDFS_EXEC] dfs -copyFromLocal $[DATA_DIR_LOCAL] $[DATA_DIR_HDFS]
    echo "Uploaded from local path $[DATA_DIR_LOCAL] to hdfs path $[DATA_DIR_HDFS]"
  fi

